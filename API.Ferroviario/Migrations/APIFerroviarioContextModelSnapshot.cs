// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Ferroviario.Migrations
{
    [DbContext(typeof(APIFerroviarioContext))]
    partial class APIFerroviarioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.ClientesRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("RolId");

                    b.ToTable("ClientesRoles");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.PasswordResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Expiracion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("PasswordResetTokens");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.Ruta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CiudadDestino")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CiudadInicio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("HoraLlegada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("HoraSalida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RutaId")
                        .HasColumnType("integer");

                    b.Property<int>("TrenId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RutaId");

                    b.HasIndex("TrenId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int>("TrainCarId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TrainCarId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoriaPasajero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Clase")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HorarioId")
                        .HasColumnType("integer");

                    b.Property<double>("PrecioFinal")
                        .HasColumnType("double precision");

                    b.Property<int>("RutaId")
                        .HasColumnType("integer");

                    b.Property<int>("SeatId")
                        .HasColumnType("integer");

                    b.Property<string>("estadoTicket")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("HorarioId");

                    b.HasIndex("RutaId");

                    b.HasIndex("SeatId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.TrainCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadAsientos")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TrenId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TrenId");

                    b.ToTable("TrainsCars");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.ClientesRoles", b =>
                {
                    b.HasOne("Modelos.Ferroviario.Modelos.Client", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelos.Ferroviario.Modelos.Roles", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.PasswordResetToken", b =>
                {
                    b.HasOne("Modelos.Ferroviario.Modelos.Client", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.Schedule", b =>
                {
                    b.HasOne("Modelos.Ferroviario.Modelos.Ruta", "Ruta")
                        .WithMany("Schedules")
                        .HasForeignKey("RutaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelos.Ferroviario.Modelos.Train", "Tren")
                        .WithMany()
                        .HasForeignKey("TrenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ruta");

                    b.Navigation("Tren");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.Seat", b =>
                {
                    b.HasOne("Modelos.Ferroviario.Modelos.TrainCar", "TrainCar")
                        .WithMany("Seats")
                        .HasForeignKey("TrainCarId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TrainCar");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.Ticket", b =>
                {
                    b.HasOne("Modelos.Ferroviario.Modelos.Client", "Cliente")
                        .WithMany("Tickets")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelos.Ferroviario.Modelos.Schedule", "Horario")
                        .WithMany()
                        .HasForeignKey("HorarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelos.Ferroviario.Modelos.Ruta", "Ruta")
                        .WithMany()
                        .HasForeignKey("RutaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelos.Ferroviario.Modelos.Seat", "Asiento")
                        .WithMany()
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Asiento");

                    b.Navigation("Cliente");

                    b.Navigation("Horario");

                    b.Navigation("Ruta");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.TrainCar", b =>
                {
                    b.HasOne("Modelos.Ferroviario.Modelos.Train", "Tren")
                        .WithMany("TrainsCar")
                        .HasForeignKey("TrenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Tren");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.Client", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.Ruta", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.Train", b =>
                {
                    b.Navigation("TrainsCar");
                });

            modelBuilder.Entity("Modelos.Ferroviario.Modelos.TrainCar", b =>
                {
                    b.Navigation("Seats");
                });
#pragma warning restore 612, 618
        }
    }
}
